{"version":3,"file":"index.js","sources":["../../../../src/Kit/DataDisplay/Badge/index.tsx"],"sourcesContent":["import React from 'react';\nimport {Badge as AntdBadge} from 'antd';\nimport {KitBadgeProps, KitBadgeCountColor} from './types';\nimport {css, styled} from 'styled-components';\nimport theme from '@theme/index';\n\nconst StyledAntdBadge = styled(AntdBadge)<{\n    $countColor: KitBadgeCountColor;\n}>`\n    height: 16px;\n    min-width: 16px;\n    line-height: 16px;\n    font-size: ${theme.typography.fontSize7};\n\n    .ant-badge-count {\n        ${props => {\n            switch (props.$countColor) {\n                case 'default':\n                    return css`\n                        background: ${theme.color.secondary.red.red400};\n                        color: ${theme.color.neutral.typography.white};\n                    `;\n                case 'green':\n                    return css`\n                        background: ${theme.color.secondary.green.green400};\n                        color: ${theme.color.neutral.typography.white};\n                    `;\n                case 'blue':\n                    return css`\n                        background: ${theme.color.primary.blue400};\n                        color: ${theme.color.neutral.typography.white};\n                    `;\n                case 'blueInvert':\n                    return css`\n                        background: ${theme.color.primary.blue100};\n                        color: ${theme.color.secondary.blue.blue400};\n                    `;\n                case 'gray':\n                    return css`\n                        background: ${theme.color.neutral.background};\n                        color: ${theme.color.neutral.typography.black60};\n                    `;\n            }\n        }}\n    }\n\n    .ant-badge-status-processing {\n        &.ant-scroll-number {\n            position: absolute;\n        }\n\n        &::after {\n            animation-name: none;\n            content: initial;\n        }\n\n        &.ant-badge-status-dot {\n            &::after {\n                animation-name: none;\n                content: initial;\n            }\n        }\n    }\n`;\n\nexport const KitBadge: React.FunctionComponent<KitBadgeProps> = ({countColor = 'default', ...badgeProps}) => {\n    return <StyledAntdBadge $countColor={countColor} {...badgeProps} />;\n};\n\nKitBadge.displayName = 'KitBadge';\n"],"names":["StyledAntdBadge","styled","AntdBadge","theme","typography","fontSize7","e","props","$countColor","css","color","secondary","red","red400","neutral","white","green","green400","primary","blue400","blue100","blue","background","black60","KitBadge","countColor","badgeProps","React","createElement","displayName"],"mappings":";;;;AAMA,MAAMA,IAAkBC,EAAOC,CAAS;AAAA;AAAA;AAAA;AAAA,iBAMvBC,EAAMC,WAAWC,SAAAA;AAAAA;AAAAA;AAAAA,UAGxB,CAAAC,MAAA;AACE,UAAQC,EAAMC,aACV;AAAA,IAAA,KAAK;AACM,aAAAC;AAAAA,sCACWN,EAAMO,MAAMC,UAAUC,IAAIC,MAAAA;AAAAA,iCAC/BV,EAAMO,MAAMI,QAAQV,WAAWW,KAAAA;AAAAA;AAAAA,IAEhD,KAAK;AACM,aAAAN;AAAAA,sCACWN,EAAMO,MAAMC,UAAUK,MAAMC,QAAAA;AAAAA,iCACjCd,EAAMO,MAAMI,QAAQV,WAAWW,KAAAA;AAAAA;AAAAA,IAEhD,KAAK;AACM,aAAAN;AAAAA,sCACWN,EAAMO,MAAMQ,QAAQC,OAAAA;AAAAA,iCACzBhB,EAAMO,MAAMI,QAAQV,WAAWW,KAAAA;AAAAA;AAAAA,IAEhD,KAAK;AACM,aAAAN;AAAAA,sCACWN,EAAMO,MAAMQ,QAAQE,OAAAA;AAAAA,iCACzBjB,EAAMO,MAAMC,UAAUU,KAAKF,OAAAA;AAAAA;AAAAA,IAE5C,KAAK;AACM,aAAAV;AAAAA,sCACWN,EAAMO,MAAMI,QAAQQ,UAAAA;AAAAA,iCACzBnB,EAAMO,MAAMI,QAAQV,WAAWmB,OAAAA;AAAAA;AAAAA,EAEpD;AACJ,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAsBKC,IAAmD,CAAA,EAAEC,YAAAA,IAAa,cAAcC,EAAgB,MACjGC,EAAAC,cAAA5B,GAAA,EAAgBQ,aAAaiB,GAAa,GAAGC,EAAY,CAAA;AAGrEF,EAASK,cAAc;"}