{"version":3,"file":"index.js","sources":["../../../../src/Kit/DataDisplay/Card/index.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport cn from 'classnames';\nimport theme from './theme';\nimport KitCardProps from './types';\nimport KitColorbar from './ColorBar';\nimport {EditOutlined, EyeOutlined} from '@ant-design/icons';\nimport {KitTypography, KitButton} from '@kit/General/';\nimport {KitImageProps} from '@kit/DataDisplay/Image/types';\nimport {KitIconProps} from '@kit/General/Icon/types';\nimport {KitAvatarProps} from '../Avatar/types';\nimport {KitCheckbox, KitTag} from '@kit/DataEntry';\nimport type {CheckboxChangeEvent} from 'antd/es/checkbox';\n\nconst CardWrapper = styled.div<{\n    $vertical?: boolean;\n}>`\n    display: grid;\n    padding: ${theme.cardPadding}px;\n    font-family: 'Inter';\n\n    background: ${theme.backgroundColor};\n    border-radius: ${theme.borderRadius}px;\n    box-shadow: ${theme.shadow};\n    min-width: 248px;\n    width: 248px;\n    border: 1px solid transparent;\n\n    &:not(.kit-card-disabled):hover {\n        border: 1px solid ${theme.hoverBorderColor};\n    }\n\n    &:not(.kit-card-disabled) {\n        .kit-card-select-button {\n            border-radius: 3.5px;\n            font-size: ${theme.selectIconFontSize};\n            padding: 0;\n            width: 16px;\n            height: 16px;\n            min-width: 16px;\n            color: ${theme.selectIconColor};\n        }\n    }\n\n    &.kit-card-disabled {\n        background: ${theme.disabledBackgroundColor};\n        pointer-events: none;\n\n        .kit-card-data {\n            .kit-card-data-title,\n            .kit-card-data-desc,\n            .kit-card-data-footer {\n                color: ${theme.diabledTextColor};\n            }\n        }\n\n        .kit-card-select-button {\n            border-radius: 3.5px;\n            font-size: ${theme.selectIconFontSize};\n            background: ${theme.disabledBackgroundColor};\n            padding: 0;\n            width: 16px;\n            height: 16px;\n            min-width: 16px;\n            color: ${theme.diabledTextColor};\n        }\n    }\n\n    &.kit-card-vertical {\n        grid-template:\n            'picto picto'\n            'select colors'\n            'content content';\n        grid-template-columns: max-content 1fr;\n\n        .kit-card-select,\n        .kit-card-image,\n        .kit-card-icon,\n        .kit-card-colorbar {\n            margin-bottom: ${theme.itemsMargin}px;\n        }\n\n        .kit-card-image,\n        .kit-card-icon,\n        .kit-card-icon .kit-icon {\n            width: 100%;\n            height: 80px;\n        }\n\n        .kit-card-select {\n            grid-auto-columns: min-content;\n            column-gap: 8px;\n            margin-right: 8px;\n            display: flex;\n            flex-direction: row;\n        }\n    }\n\n    &.kit-card-horizontal {\n        grid-template: 'select picto colors content';\n        grid-template-columns: min-content min-content min-content 1fr;\n\n        .kit-card-select,\n        .kit-card-image,\n        .kit-card-icon,\n        .kit-card-colorbar {\n            margin-right: ${theme.itemsMargin}px;\n        }\n\n        .kit-card-select {\n            grid-auto-rows: min-content;\n            row-gap: 8px;\n        }\n\n        .kit-card-image,\n        .kit-card-icon .kit-icon {\n            width: 64px;\n        }\n\n        .kit-card-icon .kit-icon {\n            height: 64px;\n        }\n\n        .kit-card-colorbar {\n            height: 60px;\n            flex-basis: 1fr;\n        }\n    }\n\n    .kit-card-select,\n    .kit-card-image,\n    .kit-card-picto,\n    .kit-card-colorbar {\n        flex: 0 0 auto;\n    }\n\n    .kit-card-select {\n        grid-area: select;\n        display: grid;\n    }\n\n    .kit-card-image {\n        grid-area: picto;\n        height: 64px;\n        border-radius: ${theme.borderRadius}px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        overflow: hidden;\n        border: 1px solid ${theme.imageBorderColor};\n\n        .kit-card-image-image {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n\n            img {\n                width: auto;\n                max-width: 100%;\n                max-height: 100%;\n            }\n        }\n    }\n\n    .kit-card-icon {\n        grid-area: picto;\n        height: 64px;\n        width: 64px;\n        border-radius: ${theme.borderRadius}px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        overflow: hidden;\n        border: 1px solid ${theme.imageBorderColor};\n\n        &.noBorder {\n            border-color: transparent;\n        }\n\n        .anticon {\n            font-size: 2rem;\n            text-align: center;\n            width: 100%;\n            height: 100%;\n            display: inline-flex;\n            align-items: center;\n            justify-content: center;\n        }\n\n        .kit-icon {\n            padding: 0px;\n        }\n    }\n\n    .kit-card-colorbar {\n        grid-area: colors;\n    }\n\n    .kit-card-data {\n        grid-area: content;\n        display: flex;\n        flex-direction: column;\n        overflow: hidden;\n\n        > :not(:last-child) {\n            margin-bottom: 5px;\n        }\n\n        .kit-card-description-container {\n            position: relative;\n        }\n\n        .kit-card-data-title {\n            font-size: ${theme.text.title.fontSize}px;\n            font-weight: ${theme.text.title.fontWeight};\n            color: ${theme.text.title.color};\n        }\n        .kit-card-data-desc {\n            font-size: ${theme.text.description.fontSize}px;\n            font-weight: ${theme.text.description.fontWeight};\n            color: ${theme.text.description.color};\n\n            .ant-typography-expand {\n                visibility: hidden;\n            }\n        }\n        .kit-card-data-footer {\n            font-size: ${theme.text.footer.fontSize}px;\n            font-weight: ${theme.text.footer.fontWeight};\n            color: ${theme.text.footer.color};\n        }\n\n        .kit-card-description-collexp {\n            color: ${theme.text.description.color};\n\n            &:hover {\n                color: ${theme.text.description.moreLessHoverColor};\n            }\n\n            &.kit-card-description-collapse {\n                float: right;\n            }\n\n            &.kit-card-description-expand {\n                position: absolute;\n                right: 0;\n                bottom: 0;\n            }\n        }\n    }\n`;\n\n// TODO Add More /less button to description\n\nconst getPicture = picture => {\n    console.log(picture);\n    if (!picture) {\n        return null;\n    }\n\n    let noBorder = false;\n    let cloneProps = {};\n    let wrapperClassName = 'kit-card-icon';\n    switch (picture.type.displayName) {\n        case 'KitImage':\n            cloneProps = {\n                preview: {\n                    mask: <EyeOutlined />\n                },\n                width: '100%',\n                height: '100%',\n                rootClassName: (picture.props.rootClassName || '') + ' kit-card-image-image'\n            };\n            wrapperClassName = 'kit-card-image';\n            break;\n        case 'KitIcon':\n            noBorder = true;\n            cloneProps = {\n                on: true\n            };\n            break;\n        case 'KitAvatar':\n            break;\n        default:\n            return null;\n    }\n    let Component = React.cloneElement(picture, cloneProps as KitImageProps & KitIconProps & KitAvatarProps);\n    return <div className={`${wrapperClassName} ${noBorder ? 'noBorder' : ''}`}>{Component}</div>;\n};\n\nconst getActions = (actions, disabled) => {\n    if (!actions) {\n        return null;\n    }\n\n    return actions.map(button => {\n        return React.cloneElement(button, {\n            type: 'default',\n            diasbled: disabled,\n            className: `${button.props.className || ''} kit-card-select-button`\n        });\n    });\n};\n\nconst getSWrapperClassName = (vertical, disabled, className) =>\n    cn(className, 'kit-card-wrapper', {\n        'kit-card-vertical': vertical,\n        'kit-card-horizontal': !vertical,\n        'kit-card-disabled': disabled\n    });\n\nexport const KitCard: React.FunctionComponent<KitCardProps> = ({\n    vertical,\n    disabled,\n    colors,\n    picture,\n    title,\n    description,\n    extrainfo,\n    tags,\n    actions,\n    onSelectChange,\n    onEdit,\n    ...props\n}) => {\n    const [descriptionVisible, setDescriptionVisible] = useState(false);\n    const [isDescriptionEllipsis, setIsDescriptionEllipsis] = useState(false);\n\n    return (\n        <CardWrapper className={getSWrapperClassName(vertical, disabled, props.className || '')} {...props}>\n            {(onSelectChange || onEdit) && (\n                <div className=\"kit-card-select\">\n                    {onSelectChange && (\n                        <KitCheckbox\n                            onChange={(e: CheckboxChangeEvent) => onSelectChange && onSelectChange(e)}\n                            disabled={disabled}\n                        />\n                    )}\n                    {onEdit && (\n                        <KitButton\n                            className=\"kit-card-select-button\"\n                            onClick={() => onEdit && onEdit()}\n                            disabled={disabled}\n                        >\n                            <EditOutlined />\n                        </KitButton>\n                    )}\n                    {getActions(actions, disabled)}\n                </div>\n            )}\n            {getPicture(picture)}\n            {colors && <KitColorbar colors={colors} vertical={!vertical} className={`kit-card-colorbar`} />}\n            <div className=\"kit-card-data\">\n                <KitTypography.Text className=\"kit-card-data-title\" ellipsis={{rows: 1, tooltip: true}}>\n                    {title}\n                </KitTypography.Text>\n                <div className=\"kit-card-description-container\">\n                    <KitTypography.Paragraph\n                        className=\"kit-card-data-desc\"\n                        ellipsis={\n                            descriptionVisible\n                                ? false\n                                : {\n                                      rows: 2,\n                                      expandable: true,\n                                      onEllipsis: () => setIsDescriptionEllipsis(true)\n                                  }\n                        }\n                    >\n                        {description}\n                        {descriptionVisible && (\n                            <KitTypography.Link\n                                className=\"kit-card-description-collexp kit-card-description-collapse\"\n                                onClick={e => {\n                                    e.stopPropagation();\n                                    setDescriptionVisible(false);\n                                }}\n                            >\n                                Less\n                            </KitTypography.Link>\n                        )}\n                    </KitTypography.Paragraph>\n                    {isDescriptionEllipsis && !descriptionVisible && (\n                        <KitTypography.Link\n                            className=\"kit-card-description-collexp kit-card-description-expand\"\n                            onClick={e => {\n                                e.stopPropagation();\n                                setDescriptionVisible(true);\n                            }}\n                        >\n                            More\n                        </KitTypography.Link>\n                    )}\n                </div>\n                <KitTypography.Text className=\"kit-card-data-footer\">{extrainfo}</KitTypography.Text>\n                {tags && (\n                    <div className=\"kit-card-tags\">\n                        {tags.map(tag => (\n                            <KitTag key={tag as string} color=\"blue\">\n                                {tag}\n                            </KitTag>\n                        ))}\n                    </div>\n                )}\n            </div>\n        </CardWrapper>\n    );\n};\n\nKitCard.displayName = 'KitCard';\n"],"names":["CardWrapper","styled","div","theme","cardPadding","backgroundColor","borderRadius","shadow","hoverBorderColor","selectIconFontSize","selectIconColor","disabledBackgroundColor","diabledTextColor","itemsMargin","imageBorderColor","text","title","fontSize","fontWeight","color","description","footer","moreLessHoverColor","getPicture","e","console","log","picture","let","noBorder","cloneProps","wrapperClassName","type","displayName","preview","mask","EyeOutlined","width","height","rootClassName","props","on","Component","React","cloneElement","createElement","className","getActions","actions","disabled","map","button","diasbled","getSWrapperClassName","vertical","cn","kit-card-vertical","kit-card-horizontal","kit-card-disabled","KitCard","colors","extrainfo","tags","onSelectChange","onEdit","descriptionVisible","setDescriptionVisible","useState","isDescriptionEllipsis","setIsDescriptionEllipsis","KitCheckbox","onChange","KitButton","onClick","EditOutlined","KitColorbar","KitTypography","Text","ellipsis","rows","tooltip","Paragraph","expandable","onEllipsis","Link","stopPropagation","KitTag","key","tag"],"mappings":"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"}