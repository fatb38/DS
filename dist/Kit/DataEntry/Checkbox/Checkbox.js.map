{"version":3,"file":"Checkbox.js","sources":["../../../../src/Kit/DataEntry/Checkbox/Checkbox.tsx"],"sourcesContent":["import React from 'react';\nimport {Checkbox} from 'antd';\nimport styled from 'styled-components';\nimport theme from './theme';\nimport {KitCheckboxProps} from './types';\n\nconst StyledKitCheckbox = styled(Checkbox)<KitCheckboxProps>`\n    font-weight: ${theme.fontWeight.default};\n\n    &:not(.ant-checkbox-wrapper-danger) {\n        .ant-checkbox-disabled + span {\n            color: ${theme.color.disabled};\n        }\n    }\n\n    .ant-checkbox-disabled {\n        color: ${theme.color.disabled};\n\n        .ant-checkbox-inner {\n            background-color: ${theme.backgroundColor.disabled};\n            border: ${theme.borderWidth} solid ${theme.borderColor.disabled};\n        }\n\n        .ant-checkbox-inner:after {\n            border-color: ${theme.borderColor.disabled};\n        }\n    }\n\n    &.ant-checkbox-wrapper-danger .ant-checkbox-disabled .ant-checkbox-inner:after {\n        border-color: ${theme.borderColor.danger.default};\n    }\n\n    .ant-checkbox-indeterminate {\n        &:not(.ant-checkbox-disabled) .ant-checkbox-inner {\n            background-color: ${theme.backgroundColor.default};\n            border-color: ${theme.backgroundColor.default};\n        }\n\n        .ant-checkbox-inner:after {\n            width: 8px;\n            height: 0px;\n            border: ${theme.borderWidth} solid white;\n            transform: translate('-4px', '-1px');\n        }\n        &.ant-checkbox-disabled .ant-checkbox-inner:after {\n            border-color: ${theme.borderColor.disabled};\n        }\n    }\n\n    &.ant-checkbox-wrapper-danger {\n        .ant-checkbox {\n            &.ant-checkbox-disabled + span {\n                color: ${theme.color.danger.disabled};\n            }\n\n            .ant-checkbox-inner {\n                background-color: ${theme.backgroundColor.danger.default};\n                border: ${theme.borderWidth} solid ${theme.borderColor.danger.default};\n            }\n        }\n    }\n\n    .ant-checkbox-checked + span {\n        font-weight: ${theme.fontWeight.checked};\n    }\n\n    .ant-checkbox-checked:after {\n        border: none;\n    }\n\n    &.ant-checkbox-wrapper-danger .ant-checkbox-checked:after {\n        border: none;\n    }\n\n    // Hover\n    &:not(.ant-checkbox-wrapper-disabled):hover,\n    &:not(.ant-checkbox-wrapper-disabled) .ant-checkbox:hover {\n        .ant-checkbox-inner {\n            border-color: ${theme.borderColor.hover};\n        }\n    }\n\n    &.ant-checkbox-wrapper-danger:not(.ant-checkbox-wrapper-disabled):hover,\n    &.ant-checkbox-wrapper-danger:not(.ant-checkbox-wrapper-disabled):hover .ant-checkbox-checked,\n    &.ant-checkbox-wrapper-danger:not(.ant-checkbox-wrapper-disabled) .ant-checkbox:hover {\n        .ant-checkbox-inner {\n            border-color: ${theme.borderColor.danger.hover};\n            background-color: ${theme.backgroundColor.danger.hover};\n        }\n    }\n\n    &.ant-checkbox-wrapper .ant-checkbox-input:focus + .ant-checkbox-inner {\n        border: ${theme.borderWidth} dashed ${theme.borderColor.focus};\n    }\n    &.ant-checkbox-wrapper-danger .ant-checkbox-input:focus + .ant-checkbox-inner {\n        border: ${theme.borderWidth} dashed ${theme.borderColor.danger.focus};\n    }\n`;\n\nconst KitCheckbox = React.forwardRef<any, KitCheckboxProps>((props, ref) => {\n    let className = props.danger ? (props.className || '') + ' ant-checkbox-wrapper-danger' : props.className;\n\n    return <StyledKitCheckbox {...props} ref={ref} className={className} />;\n});\n\nexport default KitCheckbox;\n"],"names":["StyledKitCheckbox","styled","Checkbox","theme","fontWeight","default","color","disabled","backgroundColor","borderWidth","borderColor","danger","checked","hover","focus","KitCheckbox","React","forwardRef","props","ref","let","className","createElement"],"mappings":";;;;AAMA,MAAMA,IAAoBC,EAAOC,CAAQ;AAAA,mBACtBC,EAAMC,WAAWC,OAAAA;AAAAA;AAAAA;AAAAA;AAAAA,qBAIfF,EAAMG,MAAMC,QAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,iBAKhBJ,EAAMG,MAAMC,QAAAA;AAAAA;AAAAA;AAAAA,gCAGGJ,EAAMK,gBAAgBD,QAAAA;AAAAA,sBAChCJ,EAAMM,WAAAA,UAAqBN,EAAMO,YAAYH,QAAAA;AAAAA;AAAAA;AAAAA;AAAAA,4BAIvCJ,EAAMO,YAAYH,QAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,wBAKtBJ,EAAMO,YAAYC,OAAON,OAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,gCAKjBF,EAAMK,gBAAgBH,OAAAA;AAAAA,4BAC1BF,EAAMK,gBAAgBH,OAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,sBAM5BF,EAAMM,WAAAA;AAAAA;AAAAA;AAAAA;AAAAA,4BAIAN,EAAMO,YAAYH,QAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,yBAOrBJ,EAAMG,MAAMK,OAAOJ,QAAAA;AAAAA;AAAAA;AAAAA;AAAAA,oCAIRJ,EAAMK,gBAAgBG,OAAON,OAAAA;AAAAA,0BACvCF,EAAMM,WAAAA,UAAqBN,EAAMO,YAAYC,OAAON,OAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,uBAMvDF,EAAMC,WAAWQ,OAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,4BAeZT,EAAMO,YAAYG,KAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,4BAQlBV,EAAMO,YAAYC,OAAOE,KAAAA;AAAAA,gCACrBV,EAAMK,gBAAgBG,OAAOE,KAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,kBAK3CV,EAAMM,WAAAA,WAAsBN,EAAMO,YAAYI,KAAAA;AAAAA;AAAAA;AAAAA,kBAG9CX,EAAMM,WAAAA,WAAsBN,EAAMO,YAAYC,OAAOG,KAAAA;AAAAA;AAAAA,GAIjEC,IAAcC,EAAMC,WAAkC,CAACC,GAAOC,MAChEC;AAAAA,MAAIC,IAAYH,EAAMP,UAAUO,EAAMG,aAAa,MAAM,iCAAiCH,EAAMG;AAEhG,SAAQL,EAAAM,cAAAtB,GAAA,EAAmB,GAAGkB,GAAOC,KAAAA,GAAUE,WAAAA,EAAsB,CAAA;AACzE,CAAC;"}