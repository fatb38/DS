{"version":3,"file":"index.js","sources":["../../../../src/Kit/DataEntry/Select/index.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Select} from 'antd';\nimport cn from 'classnames';\nimport styled from 'styled-components';\nimport {CheckOutlined} from '@ant-design/icons';\nimport {KitIcon} from '../../General/';\nimport {KitSelectProps} from './types';\nimport primaryTheme, {headerTheme} from './theme';\n\nimport {KitSelectStyle, StyledBadge, StyledLabel} from './style';\nimport {KitDropdownOutlined} from '@icons/index';\n\nconst DropDownRenderer = menu => <div className=\"kit-select-dropdown-content\">{menu}</div>;\n\nconst StyledKitSelect = styled(Select)<KitSelectProps>`\n    ${KitSelectStyle}\n`;\n\nconst getOptionColor = (props, header) => {\n    if (props.highlight) {\n        return headerTheme.highlightColor;\n    } else if (header) {\n        return headerTheme.itemsColor;\n    }\n    return;\n};\n\nconst getOptionStyle = highlight => {\n    if (highlight) {\n        return {\n            style: {\n                color: headerTheme.highlightColor\n            }\n        };\n    }\n    return null;\n};\n\nconst getOptionLabel = (props, header) => (\n    <>\n        {props.icon && <KitIcon icon={props.icon} on={!header} color={getOptionColor(props, header)} />}\n        {!props.icon && <StyledBadge>{props.color && <div style={{backgroundColor: props.color}} />}</StyledBadge>}\n        <StyledLabel {...getOptionStyle(props.highlight)}>{props.label}</StyledLabel>\n    </>\n);\n\nconst parseOptions = (list, labelOnly, header) => {\n    return list.map(({className, disabled, value, options, ...rest}) => {\n        if (options) {\n            return {\n                label: rest.label,\n                options: parseOptions(options, labelOnly, header)\n            };\n        }\n        return {\n            label: labelOnly ? <StyledLabel>{rest.label}</StyledLabel> : getOptionLabel(rest, header),\n            className: rest.highlight ? `${className} kit-select-highlight-option` : className,\n            disabled,\n            value\n        };\n    });\n};\n\nconst getDropdownClasses = (placement, header) =>\n    cn({\n        'kit-select-dropdown-top': placement && placement.indexOf('top') >= 0,\n        'kit-select-dropdown-bottom': !placement || placement.indexOf('top') < 0,\n        'kit-header-select-droppdown': header\n    });\n\nexport const KitSelect: React.FunctionComponent<KitSelectProps> = ({\n    options,\n    labelOnly,\n    mode,\n    danger,\n    header,\n    ...props\n}) => {\n    let [internalOptions, setOptions] = useState([]);\n\n    useEffect(() => {\n        if (!options) {\n            setOptions([]);\n        } else {\n            setOptions(parseOptions(options, labelOnly, header));\n        }\n    }, [options, labelOnly, header]);\n\n    const kitProps: KitSelectProps = {\n        ...props,\n        $labelOnly: labelOnly,\n        status: danger ? 'error' : null,\n        dropdownRender: DropDownRenderer,\n        suffixIcon: <KitDropdownOutlined />,\n        popupClassName: getDropdownClasses(props.placement, header),\n        className:\n            (props.className || '') +\n            ' ant-select-' +\n            (props.placement && props.placement.indexOf('top') >= 0 ? 'top' : 'bottom'),\n        menuItemSelectedIcon: <KitIcon icon={<CheckOutlined />} on={!header} />\n    };\n\n    return <StyledKitSelect {...kitProps} theme={header ? headerTheme : primaryTheme} options={internalOptions} />;\n};\n\nKitSelect.displayName = 'KitSelect';\n"],"names":["DropDownRenderer","React","createElement","className","menu","StyledKitSelect","styled","Select","KitSelectStyle","getOptionColor","props","header","highlight","headerTheme","highlightColor","itemsColor","getOptionStyle","style","color","getOptionLabel","icon","KitIcon","on","StyledBadge","backgroundColor","StyledLabel","label","parseOptions","list","labelOnly","map","disabled","value","options","rest","getDropdownClasses","placement","cn","kit-select-dropdown-top","indexOf","kit-select-dropdown-bottom","kit-header-select-droppdown","KitSelect","mode","danger","let","internalOptions","setOptions","useState","useEffect","kitProps","$labelOnly","status","dropdownRender","suffixIcon","KitDropdownOutlined","popupClassName","menuItemSelectedIcon","CheckOutlined","theme","primaryTheme","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAYA,MAAMA,IAAmB,OAAQC,EAAAC,cAAC,OAAI,EAAAC,WAAU,iCAA+BC,CAAK,GAE9EC,IAAkBC,EAAOC,CAAM;AAAA,MAC/BC,CAAAA;AAAAA,GAGAC,IAAiB,CAACC,GAAOC,MACvBD,EAAME,YACCC,EAAYC,iBACZH,IACAE,EAAYE,qBAKrBC,IAAiB,OACfJ,IACO,EACHK,OAAO,EACHC,OAAOL,EAAYC,eACvB,EAAA,IAGD,MAGLK,IAAiB,CAACT,GAAOC,wCAEtBD,EAAMU,wBAASC,GAAQ,EAAAD,MAAMV,EAAMU,MAAME,IAAI,CAACX,GAAQO,OAAOT,EAAeC,GAAOC,CAAM,GAAG,GAC5F,CAACD,EAAMU,QAASnB,EAAAC,cAAAqB,GAAA,MAAab,EAAMQ,SAASjB,EAAAC,cAAC,SAAIe,OAAO,EAACO,iBAAiBd,EAAMQ,QAAQ,CAAA,CAAG,GAC5FjB,EAAAC,cAACuB,KAAa,GAAGT,EAAeN,EAAME,SAAS,EAAA,GAAIF,EAAMgB,KAAM,CACnE,GAGEC,IAAe,CAACC,GAAMC,GAAWlB,MAC5BiB,EAAKE,IAAI,CAAA,EAAE3B,WAAAA,GAAW4B,UAAAA,GAAUC,OAAAA,GAAOC,SAAAA,GAAYC,GAAAA,EAAU,MAC5DD,IACO,EACHP,OAAOQ,EAAKR,OACZO,SAASN,EAAaM,GAASJ,GAAWlB,CAAM,EAAA,IAGjD,EACHe,OAAOG,IAAa5B,EAAAC,cAAAuB,GAAA,MAAaS,EAAKR,KAAM,IAAiBP,EAAee,GAAMvB,CAAM,GACxFR,WAAW+B,EAAKtB,YAAeT,IAAH,iCAA6CA,GACzE4B,UAAAA,GACAC,OAAAA,EAAA,CAEP,GAGCG,IAAqB,CAACC,GAAWzB,MACnC0B,EAAG,EACCC,2BAA2BF,KAAyC,KAA5BA,EAAUG,QAAQ,KAAK,GAC/DC,8BAA8B,CAACJ,KAAaA,EAAUG,QAAQ,KAAK,IAAI,GACvEE,+BAA+B9B,EACnC,CAAC,GAEQ+B,IAAqD,CAAA,EAC9DT,SAAAA,GACAJ,WAAAA,GACAc,MAAAA,GACAC,QAAAA,GACAjC,QAAAA,GAAAA,GACGD,EACD,MAAA;AACFmC,MAAI,CAACC,GAAiBC,CAAcC,IAAAA,EAAS,CAAE,CAAA;AAE/CC,SAAAA,EAAU,MAAA;AACDhB,IAGDc,EAHCd,IAGUN,EAAaM,GAASJ,GAAWlB,CAAM,IAFvC,EAEwC;AAAA,EAExD,GAAA,CAACsB,GAASJ,GAAWlB,CAAAA,CAAO,GAEzBuC,IAA2B,EAC7B,GAAGxC,GACHyC,YAAYtB,GACZuB,QAAQR,IAAS,UAAU,MAC3BS,gBAAgBrD,GAChBsD,4BAAaC,GAAoB,IAAA,GACjCC,gBAAgBrB,EAAmBzB,EAAM0B,WAAWzB,CAAM,GAC1DR,YACKO,EAAMP,aAAa,MACpB,kBACCO,EAAM0B,aAA+C,KAAlC1B,EAAM0B,UAAUG,QAAQ,KAAK,IAAS,QAAQ,WACtEkB,sCAAuBpC,GAAQ,EAAAD,sBAAOsC,GAAc,IAAA,GAAIpC,IAAI,CAACX,EAAQ,CAAA,EAAA,GAGlEV,EAAAC,cAACG,KAAiB,GAAG6C,GAAUS,OAAOhD,IAASE,IAAc+C,GAAc3B,SAASa,EAAiB,CAAA;AAChH;AAEAJ,EAAUmB,cAAc;"}