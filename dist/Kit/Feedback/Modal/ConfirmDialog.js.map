{"version":3,"file":"ConfirmDialog.js","sources":["../../../../src/Kit/Feedback/Modal/ConfirmDialog.tsx"],"sourcesContent":["import React from 'react';\nimport Modal from './Modal';\nimport {} from './theme';\nimport {KitInfoOutlined, KitWarningOutlined} from '../../../icons';\nimport {CheckOutlined, ExclamationOutlined} from '@ant-design/icons';\nimport {KitButton, KitIcon} from '@kit/General/';\nimport {KitSpace} from '@kit/Layout/';\nimport {modalTheme} from './theme';\nimport {confirmDialogProps} from './types';\n\nimport {useLocale} from 'antd/lib/locale';\n\nconst ConfirmDialog = ({\n    icon,\n    title,\n    firstLine,\n    secondLine,\n    image,\n    type,\n    isOpen,\n    width,\n    portalClassName,\n    okCancel,\n    onCancel,\n    cancelText,\n    onOk,\n    okText,\n    close,\n    ...props\n}: confirmDialogProps) => {\n    const [locale] = useLocale('Modal');\n\n    let mergedIcon: React.ReactNode = icon;\n    if (icon === true || icon === undefined) {\n        switch (type) {\n            case 'info':\n                mergedIcon = <KitIcon icon={<KitInfoOutlined />} on className=\"kit-confirm-icon\" />;\n                break;\n            case 'success':\n                mergedIcon = (\n                    <KitIcon icon={<CheckOutlined />} on className=\"kit-confirm-icon kit-confirm-icon-success\" />\n                );\n                break;\n            case 'error':\n                mergedIcon = (\n                    <KitIcon icon={<ExclamationOutlined />} on className=\"kit-confirm-icon kit-confirm-icon-error\" />\n                );\n                break;\n            case 'warning':\n            default:\n                mergedIcon = (\n                    <KitIcon icon={<KitWarningOutlined />} on className=\"kit-confirm-icon kit-confirm-icon-warning\" />\n                );\n                break;\n        }\n    }\n    const mergedOkCancel = okCancel ?? type === 'confirm';\n\n    const onClick = actionFn => () => {\n        actionFn && actionFn();\n        close?.();\n    };\n\n    const cancelButton = mergedOkCancel && (\n        <KitButton onClick={onClick(onCancel)}>{cancelText || locale?.cancelText}</KitButton>\n    );\n\n    const OkButton = (\n        <KitButton primaryModal onClick={onClick(onOk)}>\n            {okText || (mergedOkCancel ? locale?.okText : locale?.justOkText)}\n        </KitButton>\n    );\n\n    return (\n        <Modal\n            isOpen={isOpen}\n            showCloseIcon={false}\n            width={width || '350px'}\n            portalClassName={portalClassName}\n            footer={\n                <>\n                    {cancelButton}\n                    {OkButton}\n                </>\n            }\n            {...props}\n        >\n            <KitSpace direction=\"vertical\" size={modalTheme.itemsVerticalSpacing}>\n                {image && (\n                    <div className=\"kit-confirm-image-wrapper\" style={{backgroundImage: 'url(' + image + ')'}}></div>\n                )}\n                <KitSpace size={modalTheme.itemsVerticalSpacing}>\n                    {mergedIcon}\n                    <KitSpace direction=\"vertical\" size={modalTheme.textVerticalSpacing}>\n                        <div className=\"ant-modal-title\">{title}</div>\n                        <div className=\"ant-modal-body\">{firstLine}</div>\n                        {secondLine && <div className=\"ant-modal-body\">{secondLine}</div>}\n                    </KitSpace>\n                </KitSpace>\n            </KitSpace>\n        </Modal>\n    );\n};\n\nexport default ConfirmDialog;\n"],"names":["ConfirmDialog","icon","title","firstLine","secondLine","image","type","isOpen","width","portalClassName","okCancel","onCancel","cancelText","onOk","okText","close","props","locale","useLocale","let","mergedIcon","React","createElement","KitIcon","KitInfoOutlined","on","className","CheckOutlined","ExclamationOutlined","KitWarningOutlined","mergedOkCancel","onClick","e","actionFn","cancelButton","KitButton","OkButton","primaryModal","justOkText","Modal","showCloseIcon","footer","Fragment","KitSpace","direction","size","modalTheme","itemsVerticalSpacing","style","backgroundImage","textVerticalSpacing"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYA,MAAMA,KAAgB,CAAA,EAClBC,MAAAA,GACAC,OAAAA,GACAC,WAAAA,GACAC,YAAAA,GACAC,OAAAA,GACAC,MAAAA,GACAC,QAAAA,GACAC,OAAAA,GACAC,iBAAAA,GACAC,UAAAA,GACAC,UAAAA,GACAC,YAAAA,GACAC,MAAAA,GACAC,QAAAA,GACAC,OAAAA,GACGC,GAAAA,EACmB;AACtB,MAAM,CAACC,CAAUC,IAAAA,EAAU,OAAO;AAElCC,MAAIC,IAA8BnB;AAC9B,MAAAA,MAAS,MAAQA,MAAS;AAC1B,YAAQK;MACJ,KAAK;AACYc,QAAAA,IAAAC,EAAAC,cAACC,KAAQtB,MAAMoB,EAAAC,cAACE,OAAgB,GAAIC,IAAE,IAACC,WAAU,mBAAmB,CAAA;AACjF;AAAA,MACJ,KAAK;AAEGN,QAAAA,IAAAC,EAAAC,cAACC,KAAQtB,MAAMoB,EAAAC,cAACK,OAAc,GAAIF,IAAE,IAACC,WAAU,4CAA4C,CAAA;AAE/F;AAAA,MACJ,KAAK;AAEGN,QAAAA,IAAAC,EAAAC,cAACC,KAAQtB,MAAMoB,EAAAC,cAACM,OAAoB,GAAIH,IAAE,IAACC,WAAU,0CAA0C,CAAA;AAEnG;AAAA,MAEJ;AAEQN,QAAAA,IAAAC,EAAAC,cAACC,KAAQtB,MAAMoB,EAAAC,cAACO,OAAmB,GAAIJ,IAAE,IAACC,WAAU,4CAA4C,CAAA;AAAA,IAG5G;AAEEI,SAAAA,IAAiBpB,KAAYJ,MAAS,WAEtCyB,IAAU,CAAAC,MAAY,MAAA;AACxBC,IAAAA,KAAYA,EAAS,GACblB,KAAAA,QAAAA;AAAAA,EAAA,GAGNmB,IAAeJ,KACjBT,EAAAC,cAACa,GAAU,EAAAJ,SAASA,EAAQpB,CAAQ,EAAA,GAAIC,MAAcK,KAAAA,gBAAAA,EAAQL,WAAW,GAGvEwB,IACFf,EAAAC,cAACa,GAAU,EAAAE,cAAY,IAACN,SAASA,EAAQlB,CAAI,EAAA,GACxCC,MAAWgB,IAAiBb,KAAAA,gBAAAA,EAAQH,SAASG,KAAAA,gBAAAA,EAAQqB,WAC1D,GAIAjB,EAAAC,cAACiB,GAAA,EACGhC,QAAAA,GACAiC,eAAe,IACfhC,OAAOA,KAAS,SAChBC,iBAAAA,GACAgC,QAESpB,EAAAC,cAAAD,EAAAqB,UAAA,MAAAR,GACAE,CACL,GAEH,GAAGpB,EAAA,GAEJK,EAAAC,cAACqB,GAAS,EAAAC,WAAU,YAAWC,MAAMC,EAAWC,qBAC3C,GAAA1C,KACIgB,EAAAC,cAAA,OAAA,EAAII,WAAU,6BAA4BsB,OAAO,EAACC,iBAAiB,SAAS5C,IAAQ,IAAG,EAAG,CAAA,GAE9FgB,EAAAC,cAAAqB,GAAA,EAASE,MAAMC,EAAWC,qBACtB,GAAA3B,mBACAuB,GAAS,EAAAC,WAAU,YAAWC,MAAMC,EAAWI,oBAAA,mBAC3C,OAAI,EAAAxB,WAAU,kBAAmB,GAAAxB,CAAM,GACxCmB,EAAAC,cAAC,SAAII,WAAU,iBAAA,GAAkBvB,CAAU,GAC1CC,KAAciB,EAAAC,cAAC,OAAI,EAAAI,WAAU,iBAAkB,GAAAtB,CAAW,CAC/D,CACJ,CACJ,CAAA;AAGZ;"}