{"version":3,"file":"index.js","sources":["../../../../src/Kit/General/Button/index.tsx"],"sourcesContent":["import React from 'react';\nimport {Button as AntdButton} from 'antd';\nimport {styled, css} from 'styled-components';\nimport {primaryTheme, linkTheme, defaultTheme, segmentedTheme, segmentedGreenTheme, segmentedGrayTheme} from './theme';\nimport type {KitButtonProps} from './types';\nimport {ButtonProps} from 'antd/lib/button';\nimport {ButtonType} from 'antd/es/button';\nimport {CheckCircleFilled} from '@ant-design/icons';\n\ninterface StyledAntdButtonProps extends ButtonProps {\n    $bigIcon?: boolean;\n    ghost?: boolean;\n}\n\nconst StyledAntdButton = styled(AntdButton)<StyledAntdButtonProps>`\n    height: 40px;\n    min-width: 40px;\n    box-shadow: none;\n    color: ${props => props.theme.color.default};\n    background-color: ${props => props.theme.backgroundColor.default};\n    border-color: ${props => props.theme.borderColor.default};\n    font-weight: ${props => props.theme.font.weight};\n\n    &.ant-btn.ant-btn-icon-only,\n    &.ant-btn {\n        .anticon {\n            ${props =>\n                props.$bigIcon &&\n                css`\n                    padding: 0;\n                    font-size: ${props.theme.font.bigIconSize}px;\n                `}\n        }\n    }\n\n    &.ant-btn-primary.ant-btn-background-ghost {\n        color: ${props => props.theme.backgroundColor.default};\n        background-color: ${props => props.theme.color.default};\n    }\n\n    + .kit-btn-segmented-active-icon {\n        position: absolute;\n        z-index: 2;\n        bottom: 6px;\n        right: 5px;\n        font-size: 12px;\n        color: ${props => props.theme.color.iconCheck};\n    }\n\n    &.kit-btn-segmented {\n        border-radius: 10px;\n\n        &.kit-btn-segmented-active:not(.ant-btn-dangerous) {\n            color: ${props => props.theme.color.active};\n            background-color: ${props => props.theme.backgroundColor.active};\n            border-color: ${props => props.theme.borderColor.active};\n            z-index: 2;\n\n            &:not(.ant-btn-link):not(.ant-btn-loading):not(.ant-btn-dangerous):not(:disabled) {\n                &:hover {\n                    background-color: ${props => props.theme.backgroundColor.active};\n                    color: ${props => props.theme.color.active};\n                }\n            }\n        }\n\n        &.kit-btn-segmented-active.ant-btn-dangerous {\n            color: ${props => props.theme.color.danger.default};\n            background-color: ${props => props.theme.backgroundColor.danger.active};\n            border-color: ${props => props.theme.borderColor.danger.active};\n\n            &:not(.ant-btn-loading):not(:disabled) {\n                &:hover {\n                    background-color: ${props => props.theme.backgroundColor.danger.active};\n                }\n            }\n        }\n\n        &:disabled {\n            cursor: not-allowed;\n        }\n    }\n\n    &.ant-btn-compact-item {\n        border-radius: 0;\n\n        &.ant-btn-compact-first-item {\n            border-radius: ${props => props.theme.compactBorderRadius}px 0 0\n                ${props => props.theme.compactBorderRadius}px;\n        }\n\n        &.ant-btn-compact-last-item {\n            border-radius: 0 ${props => props.theme.compactBorderRadius}px ${props => props.theme.compactBorderRadius}px\n                0;\n        }\n\n        &.ant-btn-compact-first-item.ant-btn-compact-last-item {\n            border-radius: ${props => props.theme.compactBorderRadius}px;\n        }\n    }\n\n    &.ant-btn-compact-vertical-item {\n        border-radius: 0;\n\n        &.ant-btn-compact-vertical-first-item {\n            border-radius: ${props => props.theme.compactBorderRadius}px ${props => props.theme.compactBorderRadius}px 0\n                0;\n        }\n\n        &.ant-btn-compact-vertical-last-item {\n            border-radius: 0 0 ${props => props.theme.compactBorderRadius}px\n                ${props => props.theme.compactBorderRadius}px;\n        }\n\n        &.ant-btn-compact-first-item.ant-btn-compact-last-item {\n            border-radius: ${props => props.theme.compactBorderRadius}px;\n        }\n    }\n\n    &:disabled,\n    &.ant-btn-loading {\n        color: ${props => props.theme.color.disabled};\n        background-color: ${props => props.theme.backgroundColor.disabled};\n        border-color: ${props => props.theme.borderColor.disabled};\n        opacity: initial;\n\n        &:hover {\n            color: ${props => props.theme.color.disabled};\n            background-color: ${props => props.theme.backgroundColor.disabled};\n            border-color: ${props => props.theme.borderColor.disabled};\n        }\n    }\n\n    &:not(.ant-btn-link):not(.ant-btn-loading):not(.ant-btn-dangerous):not(:disabled) {\n        &:hover {\n            color: ${props => props.theme.color.hover};\n            background-color: ${props => props.theme.backgroundColor.hover};\n            border-color: ${props => props.theme.borderColor.hover};\n            border-style: solid;\n        }\n\n        &:focus {\n            color: ${props => props.theme.color.focus};\n            background-color: ${props => props.theme.backgroundColor.focus};\n            border-color: ${props => props.theme.borderColor.focus};\n            border-style: dashed;\n        }\n\n        &:active {\n            color: ${props => props.theme.color.active};\n            background-color: ${props => props.theme.backgroundColor.active};\n            border-color: ${props => props.theme.borderColor.active};\n            border-style: solid;\n        }\n    }\n\n    &.ant-btn-link {\n        height: 22px;\n        padding: 0px;\n        border: none;\n        border-radius: 0px;\n        border-bottom: 1px solid ${props => props.theme.borderColor.default};\n\n        &:disabled {\n            border-bottom: none;\n        }\n\n        &:not(.ant-btn-loading):not(:disabled) {\n            &:hover {\n                color: ${props => props.theme.color.default};\n                border-bottom: 1px dashed ${props => props.theme.borderColor.hover};\n            }\n\n            &:focus {\n                border-bottom: 1px dashed ${props => props.theme.borderColor.focus};\n            }\n\n            &:active {\n                border-bottom: 1px dashed ${props => props.theme.borderColor.active};\n            }\n        }\n    }\n\n    &.ant-btn-dangerous {\n        box-shadow: none;\n        color: ${props => props.theme.color.danger.default};\n        background-color: ${props => props.theme.backgroundColor.danger.default};\n        border-color: ${props => props.theme.borderColor.danger.default};\n\n        &:disabled {\n            color: ${props => props.theme.color.danger.disabled};\n            background-color: ${props => props.theme.backgroundColor.danger.disabled};\n            border-color: ${props => props.theme.borderColor.danger.disabled};\n            opacity: initial;\n        }\n\n        &:not(.ant-btn-loading):not(:disabled) {\n            &:hover {\n                color: ${props => props.theme.color.danger.default};\n                background-color: ${props => props.theme.backgroundColor.danger.hover};\n                border-color: ${props => props.theme.borderColor.danger.hover};\n\n                &.ant-btn-link {\n                    border-width: 0 0 1px 0;\n                }\n            }\n\n            &:focus {\n                color: ${props => props.theme.color.danger.default};\n                background-color: ${props => props.theme.backgroundColor.danger.focus};\n                border-color: ${props => props.theme.borderColor.danger.focus};\n                border-style: dashed;\n\n                &.ant-btn-link {\n                    border-width: 0 0 1px 0;\n                }\n            }\n\n            &:active {\n                color: ${props => props.theme.color.danger.default};\n                background-color: ${props => props.theme.backgroundColor.danger.active};\n                border-color: ${props => props.theme.borderColor.danger.active};\n\n                &.ant-btn-link {\n                    border-width: 0 0 1px 0;\n                }\n            }\n        }\n    }\n`;\n\nconst Button: React.ForwardRefRenderFunction<HTMLButtonElement | HTMLAnchorElement, KitButtonProps> = (\n    {bigIcon, primaryModal, type, subtypeSegmented, isCheckedSegmented, isActiveSegmented, className, ...buttonProps},\n    ref\n) => {\n    const getThemeToUse = () => {\n        if (primaryModal) {\n            return primaryTheme;\n        }\n\n        switch (type) {\n            case 'primary':\n                return primaryTheme;\n            case 'link':\n                return linkTheme;\n            case 'segmented':\n                switch (subtypeSegmented) {\n                    case 'green':\n                        return segmentedGreenTheme;\n                    case 'gray':\n                        return segmentedGrayTheme;\n                    case 'default':\n                    default:\n                        return segmentedTheme;\n                }\n            case 'default':\n            default:\n                return defaultTheme;\n        }\n    };\n\n    const getTypeToUseForAntd = (): ButtonType => {\n        if (primaryModal) {\n            return 'primary';\n        }\n        switch (type) {\n            case 'segmented':\n            default:\n                return 'default';\n            case 'primary':\n            case 'link':\n            case 'default':\n                return type;\n        }\n    };\n\n    const getClasses = () => {\n        let classes = className || '';\n\n        classes += type === 'segmented' ? ' kit-btn-segmented' : '';\n        classes += isActiveSegmented ? ' kit-btn-segmented-active' : '';\n\n        return classes;\n    };\n\n    return (\n        <div\n            style={{\n                position: 'relative',\n                width: 'fit-content'\n            }}\n        >\n            <StyledAntdButton\n                {...buttonProps}\n                className={getClasses()}\n                $bigIcon={bigIcon}\n                ghost={primaryModal}\n                theme={getThemeToUse()}\n                type={getTypeToUseForAntd()}\n                ref={ref}\n            ></StyledAntdButton>\n            {type === 'segmented' && isCheckedSegmented && (\n                <CheckCircleFilled className=\"kit-btn-segmented-active-icon\" />\n            )}\n        </div>\n    );\n};\n\ntype CompoundedComponent = React.ForwardRefExoticComponent<KitButtonProps & React.RefAttributes<HTMLElement>>;\n\nexport const KitButton = React.forwardRef<HTMLButtonElement | HTMLAnchorElement, KitButtonProps>(\n    Button\n) as CompoundedComponent;\n\nKitButton.displayName = 'KitButton';\n"],"names":["StyledAntdButton","styled","AntdButton","props","theme","color","default","backgroundColor","borderColor","font","weight","$bigIcon","css","bigIconSize","iconCheck","active","danger","compactBorderRadius","disabled","hover","focus","Button","bigIcon","primaryModal","type","subtypeSegmented","isCheckedSegmented","isActiveSegmented","className","buttonProps","ref","React","createElement","style","position","width","ghost","primaryTheme","linkTheme","segmentedGreenTheme","segmentedGrayTheme","segmentedTheme","defaultTheme","CheckCircleFilled","KitButton","forwardRef","displayName"],"mappings":"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"}