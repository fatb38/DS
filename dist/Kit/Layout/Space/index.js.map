{"version":3,"file":"index.js","sources":["../../../../src/Kit/Layout/Space/index.tsx"],"sourcesContent":["import React from 'react';\nimport {Space as AntdSpace} from 'antd';\nimport type {KitSpaceProps} from './types';\nimport {theme} from './theme';\nimport {SpaceCompactProps} from 'antd/es/space/Compact';\n\nconst spaceSize: {\n    small: number;\n    middle: number;\n    large: number;\n} = {\n    small: theme.smallGap,\n    middle: theme.middleGap,\n    large: theme.largeGap\n};\n\nconst Space: React.FunctionComponent<KitSpaceProps> = props => {\n    let {size, ...rest} = props;\n    const gapSize = React.useMemo(() => {\n        return typeof size === 'string' ? spaceSize[size] : size;\n    }, [size]);\n\n    return <AntdSpace size={gapSize} {...rest} />;\n};\n\ntype CompoundedComponent = React.FunctionComponent<KitSpaceProps> & {\n    Compact: React.FunctionComponent<SpaceCompactProps>;\n};\n\nexport const KitSpace = Space as unknown as CompoundedComponent;\nKitSpace.displayName = 'KitSpace';\nKitSpace.Compact = AntdSpace.Compact;\n"],"names":["spaceSize","small","theme","smallGap","middle","middleGap","large","largeGap","Space","e","let","size","rest","props","gapSize","React","useMemo","createElement","AntdSpace","KitSpace","displayName","Compact"],"mappings":";;;AAMA,MAAMA,IAIF,EACAC,OAAOC,EAAMC,UACbC,QAAQF,EAAMG,WACdC,OAAOJ,EAAMK,SACjB,GAEMC,IAAgD,CAAAC,MAAA;AAClDC,MAAI,EAACC,MAAAA,GAAAA,GAASC,EAAA,IAAQC;AAChBC,SAAAA,IAAUC,EAAMC,QAAQ,MACnB,OAAOL,KAAS,WAAWX,EAAUW,CAAQA,IAAAA,GACrD,CAACA,CAAAA,CAAK,GAEDI,EAAAE,cAAAC,GAAA,EAAUP,MAAMG,GAAU,GAAGF,EAAM,CAAA;AAC/C,GAMaO,IAAWX;AACxBW,EAASC,cAAc,YACvBD,EAASE,UAAUH,EAAUG;"}