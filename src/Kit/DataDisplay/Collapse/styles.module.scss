@import '../../../css/mixins.scss';

:local(.kit-collapse) {
    border: none;

    &#{&}#{&}#{&} > .ant-collapse-item {
        border: 1px solid var(--components-Collapse-colors-border-default, var(--general-utilities-border));
        padding: convertToPixel(--general-spacing-none);

        &.ant-collapse-item-disabled {
            background-color: var(
                --components-Collapse-colors-background-disabled,
                var(--general-utilities-neutral-neutralLight)
            );

            .ant-collapse-expand-icon,
            .ant-collapse-header-text {
                color: var(--components-Collapse-colors-icon-disabled, var(--general-utilities-text-textDisabled));
            }
        }

        &[data-item-selected='true'],
        &.ant-collapse-item-active,
        &:hover:not(.ant-collapse-item-disabled),
        &:not(.ant-collapse-item-disabled):has(.ant-collapse-header:focus) {
            // TODO: add css variable outline-width: cards-border-stroke
            border: 1px solid var(--components-Collapse-colors-border-active, var(--general-utilities-main-mainColor));
            padding: convertToPixel(--general-spacing-none);

            &:not(.ant-collapse-item-active):not(.ant-collapse-item-disabled):has(.ant-collapse-header:focus) {
                border-color: var(--components-Collapse-colors-border-active, var(--general-utilities-focus));
            }

            & + .ant-collapse-item[data-item-selected='true'],
            & + .ant-collapse-item.ant-collapse-item-active {
                border-top: none;
                padding-top: convertToPixel(--general-spacing-none);
            }

            & + .ant-collapse-item:not([data-item-selected='true']),
            & + .ant-collapse-item:not(.ant-collapse-item-active) {
                border-top: none;

                &:hover,
                &:not([data-item-selected='true']):not(.ant-collapse-item-disabled):has(.ant-collapse-header:focus),
                &:not(.ant-collapse-item-active):not(.ant-collapse-item-disabled):has(.ant-collapse-header:focus) {
                    padding-top: convertToPixel(--general-spacing-none);
                }
            }
        }

        &:not([data-item-selected='true']):not(.ant-collapse-item-disabled):not(:last-of-type),
        &:not(.ant-collapse-item-active):not(.ant-collapse-item-disabled):not(:last-of-type) {
            &:not(.pseudo-hover):hover {
                border-bottom: 1px solid
                    var(--components-Collapse-colors-border-active, var(--general-utilities-main-mainColor));
            }

            &:not(.ant-collapse-item-active):not(.ant-collapse-item-disabled):has(.ant-collapse-header:focus) {
                border-bottom: 1px solid var(--components-Collapse-colors-border-active, var(--general-utilities-focus));
            }
        }

        &.ant-collapse-item-disabled:not(.ant-collapse-item-active):not(:last-of-type),
        &:not(.ant-collapse-item-active):not([data-item-selected='true']):not(:last-of-type):not(:hover) {
            border-bottom: none;
        }

        .ant-collapse-header {
            align-items: center;
            padding: convertToPixel(--general-spacing-s);

            .ant-collapse-expand-icon {
                padding-inline-start: convertToPixel(--general-spacing-s);
                padding-inline-end: convertToPixel(--general-spacing-s);

                svg {
                    transition: transform 0.3s ease-in-out;
                    transform: rotate(0deg);
                }
            }
        }

        &.ant-collapse-item-active > .ant-collapse-header > .ant-collapse-expand-icon svg {
            transition: transform 0.3s ease-in-out;
            transform: rotate(180deg);
        }

        .ant-collapse-content {
            border-top: none;

            .ant-collapse-content-box {
                padding: convertToPixel(--general-spacing-none) convertToPixel(--general-spacing-s)
                    convertToPixel(--general-spacing-s) convertToPixel(--general-spacing-s);
                margin-top: convertToPixel(--general-spacing-xxs);
            }
        }

        &:first-of-type,
        &:first-of-type .ant-collapse-header {
            border-top-left-radius: convertToPixel(--components-Collapse-border-radius, --general-border-radius-s);
            border-top-right-radius: convertToPixel(--components-Collapse-border-radius, --general-border-radius-s);
        }

        &:last-of-type {
            &,
            & .ant-collapse-header {
                border-bottom-left-radius: convertToPixel(
                    --components-Collapse-border-radius,
                    --general-border-radius-s
                );
                border-bottom-right-radius: convertToPixel(
                    --components-Collapse-border-radius,
                    --general-border-radius-s
                );
            }

            &.ant-collapse-item-active .ant-collapse-header {
                border-bottom-left-radius: 0;
                border-bottom-right-radius: 0;
            }
        }
    }
}

:local(.kit-collapse-header) {
    display: grid;
    grid-template: 'switch image content';
    grid-template-columns: min-content min-content min-content;
    align-items: center;
    max-height: 90px;

    .kit-collapse-header-switch {
        grid-area: switch;
        margin-right: convertToPixel(--general-spacing-s);
    }

    .kit-collapse-header-image {
        grid-area: image;
        margin-right: convertToPixel(--general-spacing-s);
    }

    .kit-collapse-header-content {
        grid-area: content;
        width: max-content;
        display: grid;
        grid-template: 'tag' 'title' 'description';

        &.kit-collapse-header-content-rows {
            grid-row-gap: convertToPixel(--general-spacing-xxs);
        }

        .kit-collapse-header-content-tag {
            grid-area: title;
        }

        .kit-collapse-header-content-title {
            grid-area: title;
            font-size: convertToPixel(--general-typography-fontSize3);
        }

        .kit-collapse-header-content-description {
            grid-area: description;
        }
    }
}

:local(.kit-collapse-header-extra) {
    display: grid;
    grid-template: 'checkbox actions';

    .kit-collapse-header-extra-checkbox {
        grid-area: checkbox;
        align-self: center;
    }

    .kit-collapse-header-extra-actions {
        padding-left: convertToPixel(--general-spacing-s);
        grid-area: actions;
        display: grid;
        grid-template-columns: auto auto;

        > div:nth-child(2) {
            margin-left: convertToPixel(--general-spacing-s);
        }
    }
}
